---

nginx_user: 'nginx'
worker_processes: 'auto'
pidpath: '/run/nginx.pid'
error_logpath: '/var/log/nginx/error.log'

events_worker_connections: 1024

http:
  log_format: |
    main  '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"'
  access_log: '/var/log/nginx/access.log  main'
  misc_opts: |
    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
  types_hash_max_size: 2048
  server_names_hash_bucket_size: 128
  server_name_in_redirect: 'off'
  map: |
      map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
      }
  server_tokens: 'off'
  ssl_protocols: 'TLSv1.2'
  ssl_certificate: '/etc/letsencrypt/live/monit.redacted/fullchain.pem'
  ssl_certificate_key: '/etc/letsencrypt/live/monit.redacted/privkey.pem'
  ssl_session_cache: 'shared:SSL:30m'
  ssl_session_timeout: '12h'
  ssl_prefer_server_ciphers: 'on'
  ssl_session_tickets: 'off'
  ssl_dhparam: '/etc/nginx/ssl/dhparams.pem'
  ssl_ciphers: >
    'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:
    ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:
    ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
  ssl_stapling: 'on'
  ssl_stapling_verify: 'on'
  client_max_body_size: '16384m'
  proxy:
    http_version: '1.1'
    headers:
      - 'Upgrade $http_upgrade'
      - 'Connection $connection_upgrade'
      - 'X-Real-IP $remote_addr'
      - 'X-Forward-For $proxy_add_x_forwarded_for'
      - 'X-Forward-Proto https'
      - 'X-Nginx-Proxy true'
      - 'Host $http_host'
  headers:
    - 'Strict-Transport-Security max-age=31536000'
    - 'X-Content-Type-Options "nosniff"'
    - 'X-Frame-Options "SAMEORIGIN"'
    - 'X-XSS-Protection "1; mode=block"'
    - 'X-Robots-Tag "none"'
    - 'X-Download-Options "noopen"'

redirect_server:
  listen: '80'
  name: '*.redacted'
  opts: |
    return 301 https://$http_host$request_uri$is_args$args;
